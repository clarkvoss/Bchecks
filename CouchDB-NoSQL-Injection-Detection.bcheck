metadata:
    language: v2-beta
    name: "CouchDB NoSQL Injection Detection"
    description: "Error-based, boolean-blind and Collaborator OOB checks for CouchDB/MapReduce query injection."
    author: "You"

define:
    payload_err = "'"
    payload_true = "\" || true || \""
    payload_false = "\" || false || \""

given insertion point then

    send payload: appending: {payload_err}
    if {latest.response} matches "(?i)bad_request|illegal_database_name|Unexpected token|Document parse error|TypeError" then
        report issue: name: "CouchDB NoSQL Injection (Error-Based)" severity: high confidence: certain remediation: "Validate and sanitize JSON inputs; avoid constructing map/reduce functions from user input." detail: "CouchDB/JSON error observed after appending a quote; possible NoSQL injection."
    end if

    send payload called true_check: appending: {payload_true}
    send payload called false_check: appending: {payload_false}
    if {true_check.response} differs from {false_check.response} then
        report issue: name: "CouchDB NoSQL Injection (Boolean-Based)" severity: high confidence: firm remediation: "Do not interpolate user data into query objects or view code; use fixed query parameters." detail: "Responses differ for boolean payloads; possible NoSQL injection."
    end if

    send request called collab_check: method: "GET" headers: "Referer": {generate_collaborator_address()} path: "/"
    if dns interactions then
        report issue: name: "CouchDB NoSQL Injection (Out-of-Band)" severity: high confidence: certain remediation: "Avoid using untrusted input in code that can issue external network interactions." detail: "Burp Collaborator observed DNS interactions after sending a collaborator-containing request; possible OOB injection."
    end if
